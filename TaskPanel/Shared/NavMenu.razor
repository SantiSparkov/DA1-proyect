@using TaskPanelLibrary.Service
@inject AuthService AuthService
@inject NavigationManager NavigationManager


@if (AuthService.IsLoggedIn())
{
    <ul class="nav flex-column">
        <li class="nav-item">
            <a class="nav-link" href="/">Home</a>
        </li>
        
        @if (AuthService.GetCurrentUser()?.IsAdmin == true)
        {
            <li class="nav-item">
                <a class="nav-link" href="/users">Users Management</a>
            </li>
        }

        <li class="nav-item">
            <a class="nav-link" href="/teams">Teams Management</a>
        </li>
        
        <li class="nav-item">
            <a class="nav-link" @onclick="() => NavigateTeamsForUser(AuthService.GetCurrentUser().Id)">Teams User</a>
        </li>

        <li class="nav-item">
            <a class="nav-link" href="/import-tasks">Import Tasks</a>
        </li>

        <li class="nav-item">
            <button class="nav-link" @onclick="Logout">Log Out</button>
        </li>
    </ul>
}

@code {

    private void Logout()
    {
        AuthService.Logout();
        NavigationManager.NavigateTo("/login");
    }
    
    [Inject]
    private NavigationManager Navigation { get; set; }

    private void NavigateTeamsForUser(int teamId)
    {
        Navigation.NavigateTo($"/teamsforuser/{teamId}");
    }

}