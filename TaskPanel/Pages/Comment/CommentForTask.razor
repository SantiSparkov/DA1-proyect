@page "/comments/{taskId:int}"
@using TaskPanelLibrary.Service
@using TaskPanelLibrary.DataTest
@using TaskPanelLibrary.Entity
@using TaskPanelLibrary.Service.Interface

@inject ICommentService CommentService

@inject Panels Panels;

<title>CommentForTask</title>

<h1>Comment for task</h1>

<table class="table">
    <thead>
    <tr>
        <th>Id</th>
        <td>Task id</td>
        <th>Description</th>
        <th>Priority</th>
    </tr>
    </thead>
    <tbody>
    @foreach ( Comment comment in comments)
    {
        <tr>
            <td @onclick="() => NavigationViewComment(comment.Id)" style="cursor: pointer;">@comment.Id </td>
            <td @onclick="() => NavigationViewComment(comment.Id)" style="cursor: pointer;">@comment.TaskId </td>
            <td @onclick="() => NavigationViewComment(comment.Id)" style="cursor: pointer;">@comment.Message </td>
            <td @onclick="() => NavigationViewComment(comment.Id)" style="cursor: pointer;">@comment.Status </td>
            <td>
                <button class="btn btn-primary mt-3" @onclick="() => NavigationUpdateComment(comment.Id)" style="cursor: pointer;">Update</button>
            </td>
        </tr>
    }
    </tbody>
</table>
<button class="btn btn-primary mt-3" @onclick="() => NavigationCreateComment()" style="cursor: pointer;">New comment</button>


@code {
    
    [Parameter]
    public int taskId { get; set; }

    List<Comment> comments;
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Panels.createTeamAndPanel();
        comments = CommentService.GetCommentForTask(taskId);
        
        
    }
    
    [Inject]
    private NavigationManager Navigation { get; set; }

    private void NavigationViewComment(int commentId)
    {
       Navigation.NavigateTo($"/viewcomment/{commentId}");
    }
    
    private void NavigationUpdateComment(int commentId)
    {
        Navigation.NavigateTo($"/updatecomment/{commentId}");
    }
    
    private void NavigationCreateComment()
    {
        Navigation.NavigateTo($"/newcomment/{taskId}");
    }
}