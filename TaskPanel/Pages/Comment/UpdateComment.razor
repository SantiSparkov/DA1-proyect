@page "/comment/update/{commentId:int}"

@using TaskPanelLibrary.Service
@using TaskPanelLibrary.DataTest
@using TaskPanelLibrary.Entity
@using TaskPanelLibrary.Entity.Enum
@using TaskPanelLibrary.Service.Interface
@using System.Data

@inject ICommentService CommentService

@inject IUserService UserService;

@inject Panels Panels;

<title>UpdateComment</title>

<h1>Update comment</h1>



<EditForm Model="@comment" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <table class="table">
        <thead>
            <tr>
                <th>Message</th>
                <th>Status</th>
                <th>Resolved by</th>
                <th>Resolved at</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@comment.Message</td>
                <td>
                    <InputSelect @bind-Value="comment.Status">
                        @foreach (var status in Enum.GetValues(typeof(EStatusComment))) 
                        {
                            <option value="@status">@status</option>
                        }
                    </InputSelect>
                </td>
               <td>
                   <InputSelect @bind-Value="comment.ResolvedBy">
                       @foreach (User user in UserService.GetAllUsers())
                       {
                           <option value="@user">@user.Email</option>
                       }
                   
                   </InputSelect>
                   </td>
                <td>@comment.ResolvedAt</td>
            </tr>
        </tbody>
    </table>

    <button class="btn btn-primary mt-3" @onclick="() => NavigationUpdateComment(comment)">Update</button>
    <button class="btn btn-secondary mt-3" @onclick="() => NavigationGoBack()" >Cancel</button>

</EditForm>


@code {
    
    [Parameter]
    public int commentId { get; set; }

    Comment comment;
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        comment = CommentService.FindById(commentId);
        Panels.createTeamAndPanel();
        
    }
    
    [Inject]
    private NavigationManager Navigation { get; set; }

    private void NavigationUpdateComment(Comment comment)
    {
        this.comment.ResolvedAt = DateTime.Now;
        CommentService.UpdateComment(comment);
        Navigation.NavigateTo($"/comments/{comment.TaskId}");
    }
    
    private void NavigationGoBack()
    {
        Navigation.NavigateTo($"/comments/{comment.TaskId}");    }
    
    private void HandleValidSubmit()
    {
        
    }

}