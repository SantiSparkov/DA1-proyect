@page "/task/update/{taskId:int}"
@using TaskPanelLibrary.Entity.Enum
@using TaskPanelLibrary.Service.Interface
@using Task = TaskPanelLibrary.Entity.Task

@inject ITaskService TaskService
@inject NavigationManager Navigation

<title>Update Task</title>

<h1 class="text-left text-dark font-weight-bold display-4 mb-4">Update Task</h1>

<EditForm Model="@task" OnValidSubmit="NavigationUpdateTask">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="form-group mb-3">
        <label class="font-weight-bold" for="taskId">Task Id:</label>
        <p>@task.Id</p>
    </div>

    <div class="form-group mb-3">
        <label class="font-weight-bold" for="taskTitle">Title:</label>
        <InputText id="taskTitle" @bind-Value="task.Title" class="form-control" placeholder="Task Title"/>
        <ValidationMessage For="@(() => task.Title)" class="text-danger validation-message"/>
    </div>

    <div class="form-group mb-3">
        <label class="font-weight-bold" for="taskPriority">Priority:</label>
        <InputSelect id="taskPriority" @bind-Value="task.Priority" class="form-control">
            @foreach (var priority in Enum.GetValues(typeof(ETaskPriority)))
            {
                <option value="@priority">@priority</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => task.Priority)" class="text-danger validation-message"/>
    </div>

    <div class="form-group mb-3">
        <label class="font-weight-bold" for="taskDescription">Description:</label>
        <InputTextArea id="taskDescription" @bind-Value="task.Description" class="form-control" placeholder="Task Description"/>
        <ValidationMessage For="@(() => task.Description)" class="text-danger validation-message"/>
    </div>

    <div class="form-group mb-3">
        <label class="font-weight-bold" for="taskDueDate">Due Date:</label>
        <InputDate id="taskDueDate" @bind-Value="task.DueDate" class="form-control"/>
        <ValidationMessage For="@(() => task.DueDate)" class="text-danger validation-message"/>
    </div>

    <div class="mt-4">
        <button class="btn btn-primary" type="submit">Update</button>
        <button class="btn btn-secondary ml-3" type="button" @onclick="NavigationGoBack">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter] public int taskId { get; set; }

    Task task;

    protected override void OnInitialized()
    {
        task = TaskService.GetTaskById(taskId);
    }

    private void NavigationUpdateTask()
    {
        TaskService.UpdateTask(task);
        Navigation.NavigateTo($"/tasks/panel/{task.PanelId}");
    }

    private void NavigationGoBack()
    {
        Navigation.NavigateTo($"/tasks/panel/{task.PanelId}");
    }

}