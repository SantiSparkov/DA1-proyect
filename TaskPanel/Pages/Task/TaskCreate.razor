@page "/task/create/{panelId:int}"
@using TaskPanelLibrary.Service.Interface
@using TaskPanelLibrary.Entity.Enum

@inject ITaskService TaskService
@inject NavigationManager Navigation

<h3>Create Task</h3>

<EditForm Model="_task" OnValidSubmit="SaveTask">
    <DataAnnotationsValidator/>
    
    <div class="form-group">
        <label>Title:</label>
        <InputText @bind-Value="_task.Title" class="form-control"/>
        <ValidationMessage For="@(() => _task.Title)" class="text-danger validation-message"/>
    </div>
    
    <div class="form-group">    
        <label>Description:</label>
        <InputText @bind-Value="_task.Description" class="form-control"/>
        <ValidationMessage For="@(() => _task.Description)" class="text-danger validation-message"/>
    </div>
    
    <div class="form-group">
        <label>Priority:</label>
        <InputSelect @bind-Value="_task.Priority" class="form-control">
            @foreach (ETaskPriority priority in Enum.GetValues(typeof(ETaskPriority)))
            {
                <option value="@priority">@priority</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => _task.Priority)" class="text-danger validation-message"/>
    </div>
    
    <div class="form-group">
        <label for="ResolvedAt">Due Date:</label>
        <input type="datetime-local" id="ResolvedAt" @bind="_task.DueDate" class="form-control" required />
        <ValidationMessage For="@(() => _task.DueDate)" class="text-danger validation-message"/>
    </div>
    
    <div class="mt-4">
        <button class="btn btn-primary" type="submit">Save</button>
        <button class="btn btn-secondary ml-3" type="button" @onclick="NavigationGoBack">Cancel</button>
    </div>
</EditForm>

<style>
    .validation-message {
        font-size: 0.875rem;
        color: #dc3545;
        margin-top: 5px;
    }
    .form-group {
        margin-bottom: 1rem;
    }
</style>

@code {
    [Parameter]
    public int panelId { get; set; }

    TaskPanelLibrary.Entity.Task _task;
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        _task = new TaskPanelLibrary.Entity.Task();
    }
    
    private async Task SaveTask()
    {
        _task.PanelId = panelId;
        TaskService.CreateTask(_task);
        NavigationGoBack();
    }

    private void NavigationGoBack()
    {
        Navigation.NavigateTo($"/tasks/panel/{panelId}");
    }
}
