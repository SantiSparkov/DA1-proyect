@page "/panel/update/{panelId:int}"

@using TaskPanelLibrary.Entity
@using TaskPanelLibrary.Service.Interface
@inject IPanelService PanelService
@inject NavigationManager Navigation

<h1 class="text-left text-dark font-weight-bold display-4 mb-4">Update Panel</h1>

<EditForm Model="@panel" OnValidSubmit="NavigationUpdatePanel">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="form-group mb-3">
        <label for="panelName" class="form-label font-weight-bold">Name:</label>
        <InputText id="panelName" @bind-Value="panel.Name" class="form-control" placeholder="Enter panel name"/>
        <ValidationMessage For="@(() => panel.Name)" class="text-danger"/>
    </div>

    <div class="form-group mb-3">
        <label for="panelDescription" class="form-label font-weight-bold">Description:</label>
        <InputTextArea id="panelDescription" @bind-Value="panel.Description" class="form-control" placeholder="Enter panel description" rows="4"/>
        <ValidationMessage For="@(() => panel.Description)" class="text-danger"/>
    </div>

    <div class="d-flex justify-content-center mt-4">
        <button class="btn btn-primary mr-3" type="submit">Update</button>
        <button class="btn btn-secondary" type="button" @onclick="NavigationGoBack">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter] public int panelId { get; set; }

    private Panel panel;

    protected override void OnInitialized()
    {
        panel = PanelService.GetPanelById(panelId);
    }

    private void NavigationUpdatePanel()
    {
        PanelService.UpdatePanel(panel);
        Navigation.NavigateTo($"/panels/teams/{panel.Team.Id}");
    }

    private void NavigationGoBack()
    {
        Navigation.NavigateTo($"/panels/teams/{panel.Team.Id}");
    }

}