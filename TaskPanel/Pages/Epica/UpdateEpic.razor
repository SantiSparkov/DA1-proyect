@page "/epic/update/{epicId:int}"
@using TaskPanelLibrary.Entity
@using TaskPanelLibrary.Service.Interface
@inject IEpicService EpicService
@inject NavigationManager Navigation

<title>Update Epic</title>

<h1 class="text-left text-dark font-weight-bold display-4 mb-4">Update Epic</h1>

@if (_epic != null)
{
    <EditForm Model="_epic" OnValidSubmit="HandleValidSubmit" class="shadow p-4 rounded bg-light">
        <DataAnnotationsValidator/>

        <div class="form-group mb-3">
            <label class="font-weight-bold">Title:</label>
            <InputText @bind-Value="_epic.Title" class="form-control" placeholder="Enter epic title"/>
            <ValidationMessage For="@(() => _epic.Title)" class="text-danger validation-message"/>
        </div>

        <div class="form-group mb-3">
            <label class="font-weight-bold">Description:</label>
            <InputTextArea @bind-Value="_epic.Description" class="form-control" placeholder="Enter epic description"/>
            <ValidationMessage For="@(() => _epic.Description)" class="text-danger validation-message"/>
        </div>

        <div class="d-flex justify-content-start mt-4">
            <button class="btn btn-primary" type="submit">Update Epic</button>
            <button class="btn btn-secondary ml-3" style="margin-left: 10px;" type="button" @onclick="NavigationGoBack">Cancel</button>
        </div>
    </EditForm>

    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <div class="alert alert-danger mt-4" role="alert">
            @_errorMessage
        </div>
    }
}
else
{
    <p>Loading epic details...</p>
}

@code {
    [Parameter] public int epicId { get; set; }

    private Epic _epic;
    private int panelId;
    private string _errorMessage;

    protected override void OnInitialized()
    {
        try
        {
            _epic = EpicService.GetEpicById(epicId);
            panelId = _epic.PanelId;
        }
        catch (Exception e)
        {
            _errorMessage = "Error loading epic: " + e.Message;
        }
    }

    private void HandleValidSubmit()
    {
        try
        {
            EpicService.UpdateEpic(_epic);
            NavigationGoBack();
        }
        catch (Exception e)
        {
            _errorMessage = "Error updating epic: " + e.Message;
        }
    }

    private void NavigationGoBack()
    {
        Navigation.NavigateTo($"/EpicForPanel/{panelId}");
    }

}